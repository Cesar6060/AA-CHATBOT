@page "/dashboard"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

<h3>My Dashboard</h3>

<div class="container mt-3">
    <!-- Calendar -->
    <div class="row mb-3">
        <div id="calendar" style="width: 100%; height: 250px;"></div>
    </div>
    

    <!-- Today's Events -->
    <div class="row">
        <div class="col-12">
            <h4>Today's Appointments</h4>
            @if (EventsToday != null && EventsToday.Any())
            {
            @foreach (var eventItem in EventsToday)
            {
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">@eventItem.Title</h5>
                    <p class="card-text">
                        <strong>Time:</strong> @eventItem.Start.ToShortTimeString() - @eventItem.End.ToShortTimeString()<br />
                        <strong>Location:</strong> @eventItem.Location
                    </p>
                </div>
            </div>
            }
            }
            else
            {
            <p>No appointments for today.</p>
            }
        </div>
    </div>
</div>

@code {

public List<CalendarEvent> EventsToday { get; set; } = new List<CalendarEvent>();

public List<CalendarEvent> Events { get; set; } = new List<CalendarEvent>
{
    new CalendarEvent { Title = "Vet Appointment", Start = DateTime.Today.AddHours(10), End = DateTime.Today.AddHours(11), Location = "Main Street Vet Clinic" },
    new CalendarEvent { Title = "Grooming", Start = DateTime.Today.AddHours(14), End = DateTime.Today.AddHours(15), Location = "Pet Spa" }
};

protected override async Task OnAfterRenderAsync(bool firstRender)
{
if (firstRender)
{
    var eventsForJs = Events.Select(e => new
    {
        e.Title,
        Start = e.StartISO, 
        End = e.EndISO,     
        e.Location
    }).ToList();
    await JSRuntime.InvokeVoidAsync("initializeCalendar", "calendar", eventsForJs);
    EventsToday = await JSRuntime.InvokeAsync<List<CalendarEvent>>("getEventsForToday", eventsForJs);
    StateHasChanged();
}
}
}
